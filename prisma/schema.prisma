// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANUFACTURER
}

//create enum for UserStatus
enum UserStatus {
  PENDING
  APPROVED
  REJECTED
}

 enum DocumentType {
CAC
PHARMACY_CERTIFICATE
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(MANUFACTURER)
  status    UserStatus @default(PENDING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Medicine  Medicine[]
  Document  Document[]
}

model Medicine {
  id               Int      @id @default(autoincrement())
  name             String
  description      String
  verificationCode String   @unique
  userId           Int
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  manufactureDate  DateTime @db.Date
  expirationDate   DateTime @db.Date

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Document {
  id         Int          @id @default(autoincrement())
  type       DocumentType @default(CAC)
  images     String[]
  userId     Int
  user       User         @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: Cascade)
  createdAt  DateTime     @default(now()) @db.Timestamptz(3)
  uploadedAt DateTime?    @updatedAt

  @@map("document")
}
